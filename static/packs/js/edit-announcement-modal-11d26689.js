import{c as y,u as A,p as o,_ as e,bF as k,bG as i,K as a,b_ as E,g$ as m,ii as c,H as S,am as x,a8 as N,G as r,bv as w,n as D,k9 as P,ka as F,kb as I,kc as G,kd as H,bw as O}from"../index-961d4ed1.js";const d=D({save:{id:"admin.edit_announcement.save",defaultMessage:"Save"},announcementContentPlaceholder:{id:"admin.edit_announcement.fields.content_placeholder",defaultMessage:"Announcement content"},announcementStartTimePlaceholder:{id:"admin.edit_announcement.fields.start_time_placeholder",defaultMessage:"Announcement starts on…"},announcementEndTimePlaceholder:{id:"admin.edit_announcement.fields.end_time_placeholder",defaultMessage:"Announcement ends on…"}}),B=u=>{let{onClose:h}=u;const t=y(),s=A(),g=o(n=>n.admin_announcements.form.id),f=o(n=>n.admin_announcements.form.content),_=o(n=>n.admin_announcements.form.starts_at),p=o(n=>n.admin_announcements.form.ends_at),C=o(n=>n.admin_announcements.form.all_day),M=n=>{let{target:l}=n;return t(P(l.value))},T=n=>t(F(n)),v=n=>t(I(n)),b=n=>{let{target:l}=n;return t(G(l.checked))};return e(w,{onClose:()=>{h("EDIT_ANNOUNCEMENT")},title:g?e(a,{id:"column.admin.edit_announcement",defaultMessage:"Edit announcement"}):e(a,{id:"column.admin.create_announcement",defaultMessage:"Create announcement"}),confirmationAction:()=>t(H()).then(()=>t(O("EDIT_ANNOUNCEMENT"))),confirmationText:s.formatMessage(d.save)},void 0,e(k,{},void 0,e(i,{labelText:e(a,{id:"admin.edit_announcement.fields.content_label",defaultMessage:"Content"})},void 0,e(E,{autoComplete:"off",placeholder:s.formatMessage(d.announcementContentPlaceholder),value:f,onChange:M})),e(i,{labelText:e(a,{id:"admin.edit_announcement.fields.start_time_label",defaultMessage:"Start date"})},void 0,e(m,{fetchComponent:c},void 0,n=>e(n,{showTimeSelect:!0,dateFormat:"MMMM d, yyyy h:mm aa",timeIntervals:15,wrapperClassName:"react-datepicker-wrapper",placeholderText:s.formatMessage(d.announcementStartTimePlaceholder),selected:_,onChange:T,isClearable:!0}))),e(i,{labelText:e(a,{id:"admin.edit_announcement.fields.end_time_label",defaultMessage:"End date"})},void 0,e(m,{fetchComponent:c},void 0,n=>e(n,{showTimeSelect:!0,dateFormat:"MMMM d, yyyy h:mm aa",timeIntervals:15,wrapperClassName:"react-datepicker-wrapper",placeholderText:s.formatMessage(d.announcementEndTimePlaceholder),selected:p,onChange:v,isClearable:!0}))),e(S,{alignItems:"center",space:2},void 0,e(x,{checked:C,onChange:b}),e(N,{},void 0,e(r,{tag:"span",theme:"muted"},void 0,e(a,{id:"admin.edit_announcement.fields.all_day_label",defaultMessage:"All-day event"})),e(r,{size:"xs",tag:"span",theme:"muted"},void 0,e(a,{id:"admin.edit_announcement.fields.all_day_hint",defaultMessage:"When checked, only the dates of the time range will be displayed"}))))))};export{B as default};
